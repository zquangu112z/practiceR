source('~/Fiisoft/practice-R/OReilly-sample/weightedDice.R')
die
source('~/Fiisoft/practice-R/OReilly-sample/dataTypes.R')
die <- c(1:6)
source('~/Fiisoft/practice-R/OReilly-sample/dataTypes.R')
typeof(die)
source('~/Fiisoft/practice-R/OReilly-sample/dataTypes.R')
typeof(die)
source('~/Fiisoft/practice-R/OReilly-sample/dataTypes.R')
roll <- function(){
sum(sample(1:6, size = 2, replace = TRUE))
}
replicate(10000, roll)
roll_weighted <- function(){
sum(sample(1:6, size = 2, replace = TRUE, prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8)))
}
replicate(10000, roll_weighted())
roll <- function(){
sum(sample(1:6, size = 2, replace = TRUE))
}
replicate(1000, roll())
roll_weighted <- function(){
sum(sample(1:6, size = 2, replace = TRUE, prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8)))
}
replicate(1000, roll_weighted())
roll <- function(){
sum(sample(1:6, size = 2, replace = TRUE))
}
replicate(1000, roll())
roll <- function(){
sum(sample(1:6, size = 2, replace = TRUE))
}
replicate(1000, roll)
roll <- function(){
sum(sample(1:6, size = 2, replace = TRUE))
}
qplot(replicate(1000, roll), binwidth = 1)
library("ggplot2")
roll <- function(){
sum(sample(1:6, size = 2, replace = TRUE))
}
qplot(replicate(1000, roll), binwidth = 1)
library("ggplot2")
roll <- function(){
sum(sample(1:6, size = 2, replace = TRUE))
}
qplot(replicate(1000, roll()), binwidth = 1)
library("ggplot2")
roll <- function(){
sum(sample(1:6, size = 2, replace = TRUE))
}
qplot(replicate(1000, roll()), binwidth = 1)
roll_weighted <- function(){
sum(sample(1:6, size = 2, replace = TRUE, prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8)))
}
qplot(replicate(1000, roll_weighted()), binwidth = 1)
attributes(die)
names(die) <- c('one', "tw", "th", "fo", "fi", "si")
attr(die)
attributes(die)
die
dim(die) <- c(3, 2)
die
View(die)
# matrices, byrow means 'fill by row'
m <- matrix(die, nrow = 2, bycol = TRUE)
source('~/Fiisoft/practice-R/OReilly-sample/dataTypes.R')
# matrices, byrow means 'fill by row'
m <- matrix(die, nrow = 2, byrow = FALSE)
m
# matrices, byrow means 'fill by row'
m <- matrix(die, nrow = 2, byrow = TRUE)
m
hand <- c("ace", "king", "queen", "jack", "ten")
length(hand)
hand1 <- c("ace", "king", "queen", "jack", "ten", "spades", "spades",
"spades", "spades", "spades")
matrix(hand1, nrow = 5)
matrix(hand1, ncol = 2)
dim(hand1) <- c(5, 2)
die <- c(1, 6)
typeof(die)  # double aka â€œnumerics"
die <- 1:6
typeof(die)  # int
int <- c(-1L, 2L, 4L)
text <- c("Hello", "World")  # chr
comp <- c(1 + 1i, 1 + 2i, 1 + 3i)  # cplx
attributes(die)
# NULL
# set names
names(die) <- c('one', "tw", "th", "fo", "fi", "si")
attributes(die)
# dimension
dim(die) <- c(3, 2)
die
# matrices, byrow means 'fill by row'
m <- matrix(die, nrow = 2, byrow = TRUE)
m
# Dates and Times
now <- Sys.time()
now
list1 <- list(100:130, "R", list(TRUE, FALSE))
list1
list1[1]
wo", "six"),
suit = c("clubs", "
df <- data.frame(face = c("ace", "two", "six"),
suit = c("clubs", "clubs", "clubs"), value = c(1, 2,
df <- data.frame(face = c("ace", "two", "six"),
suit = c("clubs", "clubs", "clubs"), value = c(1, 2, 3))
View(df)
View(df)
source('~/Fiisoft/practice-R/OReilly-sample/cards.R')
deck <- data.frame(
face = c("king", "queen", "jack", "ten", "nine", "eight", "seven", "six",
"five", "four", "three", "two", "ace", "king", "queen", "jack", "ten",
"nine", "eight", "seven", "six", "five", "four", "three", "two", "ace",
"king", "queen", "jack", "ten", "nine", "eight", "seven", "six", "five",
"four", "three", "two", "ace", "king", "queen", "jack", "ten", "nine",
"eight", "seven", "six", "five", "four", "three", "two", "ace"),
suit = c("spades", "spades", "spades", "spades", "spades", "spades",
"spades", "spades", "spades", "spades", "spades", "spades", "spades",
"clubs", "clubs", "clubs", "clubs", "clubs", "clubs", "clubs", "clubs",
"clubs", "clubs", "clubs", "clubs", "clubs", "diamonds", "diamonds",
"diamonds", "diamonds", "diamonds", "diamonds", "diamonds", "diamonds",
"diamonds", "diamonds", "diamonds", "diamonds", "diamonds", "hearts",
"hearts", "hearts", "hearts", "hearts", "hearts", "hearts", "hearts",
"hearts", "hearts", "hearts", "hearts", "hearts"),
value = c(13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8,
7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11,
10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
)
View(deck)
View(deck)
View(deck)
View(deck)
deck <- read.csv("~/Fiisoft/practice-R/OReilly-sample/deck.csv", header=FALSE, stringsAsFactors=FALSE)
View(deck)
head(deck)
deck2 <- read.csv("~/Fiisoft/practice-R/OReilly-sample/deck.csv", header=FALSE)
View(deck2)
head(deck2)
write.csv(deck, file="mydeck", row.names = FALSE)
mydeck <- read.csv("./mydeck.csv", header=FALSE)
write.csv(deck, file="mydeck.csv", row.names = FALSE)
mydeck <- read.csv("./mydeck.csv", header=FALSE)
View(mydeck)
View(mydeck)
write.csv(deck, file="mydeck.csv", row.names = FALSE)
write.csv(deck, file="mydeck.csv", row.names = TRUE)
write.csv(deck, file="mydeck.csv", row.names = FALSE)
mydeck <- read.csv("./mydeck.csv", header=TRUE)
View(mydeck)
View(mydeck)
mydeck <- read.csv("./mydeck.csv", header=FALSE)
hand <- c("ace", "king", "queen", "jack", "ten")
length(hand)
hand1 <- c("ace", "king", "queen", "jack", "ten", "spades", "spades",
"spades", "spades", "spades")
matrix(hand1, nrow = 5)
# give the same result
# matrix(hand1, ncol = 2)
# dim(hand1) <- c(5, 2)
deck <- data.frame(
face = c("king", "queen", "jack", "ten", "nine", "eight", "seven", "six",
"five", "four", "three", "two", "ace", "king", "queen", "jack", "ten",
"nine", "eight", "seven", "six", "five", "four", "three", "two", "ace",
"king", "queen", "jack", "ten", "nine", "eight", "seven", "six", "five",
"four", "three", "two", "ace", "king", "queen", "jack", "ten", "nine",
"eight", "seven", "six", "five", "four", "three", "two", "ace"),
suit = c("spades", "spades", "spades", "spades", "spades", "spades",
"spades", "spades", "spades", "spades", "spades", "spades", "spades",
"clubs", "clubs", "clubs", "clubs", "clubs", "clubs", "clubs", "clubs",
"clubs", "clubs", "clubs", "clubs", "clubs", "diamonds", "diamonds",
"diamonds", "diamonds", "diamonds", "diamonds", "diamonds", "diamonds",
"diamonds", "diamonds", "diamonds", "diamonds", "diamonds", "hearts",
"hearts", "hearts", "hearts", "hearts", "hearts", "hearts", "hearts",
"hearts", "hearts", "hearts", "hearts", "hearts"),
value = c(13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8,
7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11,
10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
)
write.csv(deck, file="mydeck.csv", row.names = FALSE)
deck <- read.csv("./mydeck.csv", header=TRUE)
View(deck)
View(deck)
deck <- read.csv("./mydeck.csv", header=TRUE)
View(deck)
View(deck)
deck
deck[1,2]
deck[1,c(2,3)]
deal <- function(cards) {
deck[1,]
}
deal()
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
cards[1,]
}
replicate(5, deal_suffle(deck))
# shuffle the deck
deal_suffle <- function(cards){
cards <- cards[sample(1:52, size = 52), ]
cards[1,]
}
replicate(5, deal_suffle(deck))
deal(deck)
# shuffle the deck
deal_suffle <- function(cards){
cards <- cards[sample(1:52, size = 52), ]
deal(cards)
}
replicate(5, deal_suffle(deck))
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
deal(cards2)
}
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
deal(cards2)
}
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
replicate(5, deal_suffle(deck))
deal(cards2)
deal(cards2)
deal(cards2)
deal(cards2)
- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
head(cards2)
deal(cards2)
}
# shuffle the deck
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
head(cards2)
deal(cards2)
}
deal_suffle(deck)
deal_suffle(deck)
deal_suffle(deck)
# shuffle the deck
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
print(head(cards2))
deal(cards2)
}
deal_suffle(deck)
h <- deal(cards2)
# shuffle the deck
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
print(head(cards2))
h <- deal(cards2)
}
deal_suffle(deck)
# shuffle the deck
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
#  print(head(cards2))
h <- deal(cards2)
}
deal_suffle(deck)
deal_suffle(deck)
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
h <- deal(cards2)
}
deal_suffle(deck)
sdfasdf
deal_suffle(deck)
print(deal_suffle(deck))
print(deal_suffle(deck))
print(deal_suffle(deck))
deal <- function(cards) {
cards[1,]
}
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
h <- deal(cards2)
}
print(deal_suffle(deck))
print(deal_suffle(deck))
print(deal_suffle(deck))
print(deal_suffle(deck))
print(deal_suffle(deck))
print(deal_suffle(deck))
# shuffle the deck
deal_suffle <- function(cards){
cards2 <- cards[sample(1:52, size = 52), ]
deal(cards2)
}
print(deal_suffle(deck))
print(deal_suffle(deck))
print(deal_suffle(deck))
replicate(5, deal_suffle(deck))
deck$value
deck$suit
# add a new column
deck$new <- 1:52
View(deck)
View(deck)
# add a new column
deck$new <- 1
View(deck)
View(deck)
# add a new column
deck$new <- 1:10
# add a new column
deck$new <- 1:52
# delete the added column
deck$new <- NULL
# add a new column
deck$new <- 1:52
# delete the added column
deck$new <- NULL
deck$face == "face"
count(deck$face == "face")
length(deck$face == "face")
# compare column 'face' with value 'ace'
deck$face == "ace"
# count the number of 'ace' in deck
count(deck$face == 'ace')
# count the number of 'ace' in deck
sum(deck$face == 'ace')
aces <- deck$suit[deck$face == "ace"]
aces <- deck$suit[deck$face == "ace"]
print(aces <- deck$suit[deck$face == "ace"])
View(deck)
View(deck)
View(deck)
View(deck)
# Assign a value of 1 to every card in deck4 that has a suit of hearts.
deck$suit[deck$suit == "hearts"] <- 1
# Assign a value of 1 to every card in deck4 that has a suit of hearts.
deck$value[deck$suit == "hearts"] <- 1
View(deck)
View(deck)
deck <- data.frame(
face = c("king", "queen", "jack", "ten", "nine", "eight", "seven", "six",
"five", "four", "three", "two", "ace", "king", "queen", "jack", "ten",
"nine", "eight", "seven", "six", "five", "four", "three", "two", "ace",
"king", "queen", "jack", "ten", "nine", "eight", "seven", "six", "five",
"four", "three", "two", "ace", "king", "queen", "jack", "ten", "nine",
"eight", "seven", "six", "five", "four", "three", "two", "ace"),
suit = c("spades", "spades", "spades", "spades", "spades", "spades",
"spades", "spades", "spades", "spades", "spades", "spades", "spades",
"clubs", "clubs", "clubs", "clubs", "clubs", "clubs", "clubs", "clubs",
"clubs", "clubs", "clubs", "clubs", "clubs", "diamonds", "diamonds",
"diamonds", "diamonds", "diamonds", "diamonds", "diamonds", "diamonds",
"diamonds", "diamonds", "diamonds", "diamonds", "diamonds", "hearts",
"hearts", "hearts", "hearts", "hearts", "hearts", "hearts", "hearts",
"hearts", "hearts", "hearts", "hearts", "hearts"),
value = c(13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8,
7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11,
10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
)
View(deck)
View(deck)
# Assign a value of 1 to every card in deck4 that has a suit of hearts.
deck$value[deck$suit == "hearts"] <- 1
c(NA, 1:50)
mean(na_arr)
na_arr <- c(NA, 1:50)
mean(na_arr)
mean(na_arr, na.rm = TRUE)
View(deck)
View(deck)
globalenv()
globalenv()$deck
h <- 3
globalenv()$h <- 4
globalenv()$h
globalenv()$h = 4
ls()
rm(ls())
rm(list =ls())
rm(list = ls())
pwd
pwd()
getwd()
list.files()
as.environment("package:stats")
as.environment("package:ggplot2")
globalenv()$h = 4
assign(h, 6, envir = globalenv())
h <- 6
assign(h, 6, envir = globalenv())
assign("h", 6, envir = globalenv())
assign("h", 7, envir = globalenv())
deal <- function() {
card <- deck[1, ]
assign("deck", deck[-1, ], envir = globalenv())
card
}
deal()
deck <- data.frame(
face = c("king", "queen", "jack", "ten", "nine", "eight", "seven", "six",
"five", "four", "three", "two", "ace", "king", "queen", "jack", "ten",
"nine", "eight", "seven", "six", "five", "four", "three", "two", "ace",
"king", "queen", "jack", "ten", "nine", "eight", "seven", "six", "five",
"four", "three", "two", "ace", "king", "queen", "jack", "ten", "nine",
"eight", "seven", "six", "five", "four", "three", "two", "ace"),
suit = c("spades", "spades", "spades", "spades", "spades", "spades",
"spades", "spades", "spades", "spades", "spades", "spades", "spades",
"clubs", "clubs", "clubs", "clubs", "clubs", "clubs", "clubs", "clubs",
"clubs", "clubs", "clubs", "clubs", "clubs", "diamonds", "diamonds",
"diamonds", "diamonds", "diamonds", "diamonds", "diamonds", "diamonds",
"diamonds", "diamonds", "diamonds", "diamonds", "diamonds", "hearts",
"hearts", "hearts", "hearts", "hearts", "hearts", "hearts", "hearts",
"hearts", "hearts", "hearts", "hearts", "hearts"),
value = c(13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8,
7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11,
10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
)
deal()
deal()
deal()
deal()
View(deck)
View(deck)
source('~/Fiisoft/practice-R/OReilly-sample/slotMachine.R')
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
get_symbols()
source('~/Fiisoft/practice-R/OReilly-sample/slotMachine.R')
play()
source('~/Fiisoft/practice-R/OReilly-sample/slotMachine.R')
play()
play()
play()
source('~/Fiisoft/practice-R/OReilly-sample/slotMachine.R')
play()
